version: '3.3'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports: 
      - 2181:2181

  kafka:
    image: wurstmeister/kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_CREATE_TOPICS: data:1:1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - 8080:8080
    restart: always
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on: 
      - kafka

  model_1:
    build:
      context: ./service_1
      dockerfile: Dockerfile
    expose:
      - 8000
    environment:
      KAFKA_SERVER: kafka
      KAFKA_PORT: 9092
      KAFKA_TOPIC: data
    depends_on:
      - kafka
      - zookeeper

  consumer:
    build:
      context: ./consumer
      dockerfile: Dockerfile
    environment:
      KAFKA_SERVER: kafka
      KAFKA_PORT: 9092
      KAFKA_TOPIC: data
      BOT_TOKEN: '${BOT_TOKEN}'
      CHAT_ID: '${CHAT_ID}'
    depends_on:
      - kafka
      - zookeeper
      - model_1

  #frontend:
  #  build:
  #    context: ./frontend
  #    dockerfile: Dockerfile
  #  ports:
  #    - 3000:3000
  #  depends_on:
  #    - model_1

  nginx:
    image: nginx:latest
    ports:
      - 8090:8090
    volumes:
      - ./nginx_config.conf:/etc/nginx/conf.d/default.conf
    depends_on: 
      - model_1
